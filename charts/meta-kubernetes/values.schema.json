{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "definitions": {
    "io.k8s.api.admissionregistration.v1.MatchCondition": {
      "additionalProperties": false,
      "properties": {
        "expression": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "expression"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.MutatingWebhook": {
      "additionalProperties": false,
      "properties": {
        "admissionReviewVersions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "clientConfig": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.WebhookClientConfig"
        },
        "failurePolicy": {
          "type": "string"
        },
        "matchConditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MatchCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "matchPolicy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "objectSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "reinvocationPolicy": {
          "type": "string"
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.RuleWithOperations"
          },
          "type": "array"
        },
        "sideEffects": {
          "type": "string"
        },
        "timeoutSeconds": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "clientConfig",
        "sideEffects",
        "admissionReviewVersions"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.RuleWithOperations": {
      "additionalProperties": false,
      "properties": {
        "apiGroups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "apiVersions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "operations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "scope": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.ServiceReference": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "namespace",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.ValidatingWebhook": {
      "additionalProperties": false,
      "properties": {
        "admissionReviewVersions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "clientConfig": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.WebhookClientConfig"
        },
        "failurePolicy": {
          "type": "string"
        },
        "matchConditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MatchCondition"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "matchPolicy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "objectSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.RuleWithOperations"
          },
          "type": "array"
        },
        "sideEffects": {
          "type": "string"
        },
        "timeoutSeconds": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "clientConfig",
        "sideEffects",
        "admissionReviewVersions"
      ],
      "type": "object"
    },
    "io.k8s.api.admissionregistration.v1.WebhookClientConfig": {
      "additionalProperties": false,
      "properties": {
        "caBundle": {
          "format": "byte",
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ServiceReference"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.DaemonSetUpdateStrategy": {
      "additionalProperties": false,
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDaemonSet"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.DeploymentStrategy": {
      "additionalProperties": false,
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.RollingUpdateDaemonSet": {
      "additionalProperties": false,
      "properties": {
        "maxSurge": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.RollingUpdateDeployment": {
      "additionalProperties": false,
      "properties": {
        "maxSurge": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy": {
      "additionalProperties": false,
      "properties": {
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "partition": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.StatefulSetOrdinals": {
      "additionalProperties": false,
      "properties": {
        "start": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy": {
      "additionalProperties": false,
      "properties": {
        "whenDeleted": {
          "type": "string"
        },
        "whenScaled": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.apps.v1.StatefulSetUpdateStrategy": {
      "additionalProperties": false,
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ContainerResourceMetricSource": {
      "additionalProperties": false,
      "properties": {
        "container": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget"
        }
      },
      "required": [
        "name",
        "target",
        "container"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.CrossVersionObjectReference": {
      "additionalProperties": false,
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ExternalMetricSource": {
      "additionalProperties": false,
      "properties": {
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget"
        }
      },
      "required": [
        "metric",
        "target"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.HPAScalingPolicy": {
      "additionalProperties": false,
      "properties": {
        "periodSeconds": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "type",
        "value",
        "periodSeconds"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.HPAScalingRules": {
      "additionalProperties": false,
      "properties": {
        "policies": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HPAScalingPolicy"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "selectPolicy": {
          "type": "string"
        },
        "stabilizationWindowSeconds": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior": {
      "additionalProperties": false,
      "properties": {
        "scaleDown": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HPAScalingRules"
        },
        "scaleUp": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HPAScalingRules"
        }
      },
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec": {
      "additionalProperties": false,
      "properties": {
        "behavior": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerBehavior"
        },
        "maxReplicas": {
          "format": "int32",
          "type": "integer"
        },
        "metrics": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricSpec"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "minReplicas": {
          "format": "int32",
          "type": "integer"
        },
        "scaleTargetRef": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.CrossVersionObjectReference"
        }
      },
      "required": [
        "scaleTargetRef",
        "maxReplicas"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.MetricIdentifier": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.MetricSpec": {
      "additionalProperties": false,
      "properties": {
        "containerResource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ContainerResourceMetricSource"
        },
        "external": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ExternalMetricSource"
        },
        "object": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ObjectMetricSource"
        },
        "pods": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.PodsMetricSource"
        },
        "resource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.ResourceMetricSource"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.MetricTarget": {
      "additionalProperties": false,
      "properties": {
        "averageUtilization": {
          "format": "int32",
          "type": "integer"
        },
        "averageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ObjectMetricSource": {
      "additionalProperties": false,
      "properties": {
        "describedObject": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.CrossVersionObjectReference"
        },
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget"
        }
      },
      "required": [
        "describedObject",
        "target",
        "metric"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.PodsMetricSource": {
      "additionalProperties": false,
      "properties": {
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget"
        }
      },
      "required": [
        "metric",
        "target"
      ],
      "type": "object"
    },
    "io.k8s.api.autoscaling.v2.ResourceMetricSource": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.MetricTarget"
        }
      },
      "required": [
        "name",
        "target"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.PodFailurePolicy": {
      "additionalProperties": false,
      "properties": {
        "rules": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicyRule"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "rules"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement": {
      "additionalProperties": false,
      "properties": {
        "containerName": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "required": [
        "operator",
        "values"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern": {
      "additionalProperties": false,
      "properties": {
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.batch.v1.PodFailurePolicyRule": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "type": "string"
        },
        "onExitCodes": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement"
        },
        "onPodConditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicyOnPodConditionsPattern"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "action"
      ],
      "type": "object"
    },
    "io.k8s.api.certificates.v1.CertificateSigningRequestSpec": {
      "additionalProperties": false,
      "properties": {
        "expirationSeconds": {
          "format": "int32",
          "type": "integer"
        },
        "extra": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "object"
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "request": {
          "format": "byte",
          "type": "string",
          "x-kubernetes-list-type": "atomic"
        },
        "signerName": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "usages": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "request",
        "signerName"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "partition": {
          "format": "int32",
          "type": "integer"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeID": {
          "type": "string"
        }
      },
      "required": [
        "volumeID"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Affinity": {
      "additionalProperties": false,
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeAffinity"
        },
        "podAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinity"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAntiAffinity"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.AzureDiskVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "cachingMode": {
          "type": "string"
        },
        "diskName": {
          "type": "string"
        },
        "diskURI": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "required": [
        "diskName",
        "diskURI"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.AzureFilePersistentVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        },
        "secretNamespace": {
          "type": "string"
        },
        "shareName": {
          "type": "string"
        }
      },
      "required": [
        "secretName",
        "shareName"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.AzureFileVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        },
        "shareName": {
          "type": "string"
        }
      },
      "required": [
        "secretName",
        "shareName"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.CSIPersistentVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "controllerExpandSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "controllerPublishSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "nodeExpandSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "nodeStageSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeAttributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "volumeHandle": {
          "type": "string"
        }
      },
      "required": [
        "driver",
        "volumeHandle"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.CSIVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeAttributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "required": [
        "driver"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Capabilities": {
      "additionalProperties": false,
      "properties": {
        "add": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "drop": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.CephFSPersistentVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "monitors": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretFile": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "user": {
          "type": "string"
        }
      },
      "required": [
        "monitors"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.CephFSVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "monitors": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretFile": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "user": {
          "type": "string"
        }
      },
      "required": [
        "monitors"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.CinderPersistentVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "volumeID": {
          "type": "string"
        }
      },
      "required": [
        "volumeID"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.CinderVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "volumeID": {
          "type": "string"
        }
      },
      "required": [
        "volumeID"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ClaimSource": {
      "additionalProperties": false,
      "properties": {
        "resourceClaimName": {
          "type": "string"
        },
        "resourceClaimTemplateName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ClientIPConfig": {
      "additionalProperties": false,
      "properties": {
        "timeoutSeconds": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ConfigMapEnvSource": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ConfigMapKeySelector": {
      "additionalProperties": false,
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "required": [
        "key"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ConfigMapProjection": {
      "additionalProperties": false,
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ConfigMapVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "defaultMode": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Container": {
      "additionalProperties": false,
      "properties": {
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "env": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          },
          "type": "array"
        },
        "image": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resizePolicy": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerResizePolicy"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "restartPolicy": {
          "type": "string"
        },
        "securityContext": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "type": "boolean"
        },
        "stdinOnce": {
          "type": "boolean"
        },
        "terminationMessagePath": {
          "type": "string"
        },
        "terminationMessagePolicy": {
          "type": "string"
        },
        "tty": {
          "type": "boolean"
        },
        "volumeDevices": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerPort": {
      "additionalProperties": false,
      "properties": {
        "containerPort": {
          "format": "int32",
          "type": "integer"
        },
        "hostIP": {
          "type": "string"
        },
        "hostPort": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        }
      },
      "required": [
        "containerPort"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ContainerResizePolicy": {
      "additionalProperties": false,
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "restartPolicy": {
          "type": "string"
        }
      },
      "required": [
        "resourceName",
        "restartPolicy"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.DownwardAPIProjection": {
      "additionalProperties": false,
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeFile": {
      "additionalProperties": false,
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "mode": {
          "format": "int32",
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
        }
      },
      "required": [
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "defaultMode": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EmptyDirVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "medium": {
          "type": "string"
        },
        "sizeLimit": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EnvFromSource": {
      "additionalProperties": false,
      "properties": {
        "configMapRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource"
        },
        "prefix": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretEnvSource"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EnvVar": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.EnvVarSource": {
      "additionalProperties": false,
      "properties": {
        "configMapKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "fieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.EphemeralContainer": {
      "additionalProperties": false,
      "properties": {
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "env": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          },
          "type": "array"
        },
        "image": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resizePolicy": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerResizePolicy"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "restartPolicy": {
          "type": "string"
        },
        "securityContext": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "type": "boolean"
        },
        "stdinOnce": {
          "type": "boolean"
        },
        "targetContainerName": {
          "type": "string"
        },
        "terminationMessagePath": {
          "type": "string"
        },
        "terminationMessagePolicy": {
          "type": "string"
        },
        "tty": {
          "type": "boolean"
        },
        "volumeDevices": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.EphemeralVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "volumeClaimTemplate": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimTemplate"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ExecAction": {
      "additionalProperties": false,
      "properties": {
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.FCVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "lun": {
          "format": "int32",
          "type": "integer"
        },
        "readOnly": {
          "type": "boolean"
        },
        "targetWWNs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "wwids": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.FlexPersistentVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "options": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        }
      },
      "required": [
        "driver"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.FlexVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "options": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        }
      },
      "required": [
        "driver"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.FlockerVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "datasetName": {
          "type": "string"
        },
        "datasetUUID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "partition": {
          "format": "int32",
          "type": "integer"
        },
        "pdName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "required": [
        "pdName"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.GRPCAction": {
      "additionalProperties": false,
      "properties": {
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "service": {
          "type": "string"
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.GitRepoVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "directory": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        }
      },
      "required": [
        "repository"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "endpoints": {
          "type": "string"
        },
        "endpointsNamespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "required": [
        "endpoints",
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.GlusterfsVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "endpoints": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "required": [
        "endpoints",
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.HTTPGetAction": {
      "additionalProperties": false,
      "properties": {
        "host": {
          "type": "string"
        },
        "httpHeaders": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.HTTPHeader"
          },
          "type": "array"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "scheme": {
          "type": "string"
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.HTTPHeader": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.HostAlias": {
      "additionalProperties": false,
      "properties": {
        "hostnames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ip": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.HostPathVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ISCSIPersistentVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "chapAuthDiscovery": {
          "type": "boolean"
        },
        "chapAuthSession": {
          "type": "boolean"
        },
        "fsType": {
          "type": "string"
        },
        "initiatorName": {
          "type": "string"
        },
        "iqn": {
          "type": "string"
        },
        "iscsiInterface": {
          "type": "string"
        },
        "lun": {
          "format": "int32",
          "type": "integer"
        },
        "portals": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "targetPortal": {
          "type": "string"
        }
      },
      "required": [
        "targetPortal",
        "iqn",
        "lun"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ISCSIVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "chapAuthDiscovery": {
          "type": "boolean"
        },
        "chapAuthSession": {
          "type": "boolean"
        },
        "fsType": {
          "type": "string"
        },
        "initiatorName": {
          "type": "string"
        },
        "iqn": {
          "type": "string"
        },
        "iscsiInterface": {
          "type": "string"
        },
        "lun": {
          "format": "int32",
          "type": "integer"
        },
        "portals": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "targetPortal": {
          "type": "string"
        }
      },
      "required": [
        "targetPortal",
        "iqn",
        "lun"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.KeyToPath": {
      "additionalProperties": false,
      "properties": {
        "key": {
          "type": "string"
        },
        "mode": {
          "format": "int32",
          "type": "integer"
        },
        "path": {
          "type": "string"
        }
      },
      "required": [
        "key",
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Lifecycle": {
      "additionalProperties": false,
      "properties": {
        "postStart": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler"
        },
        "preStop": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.LifecycleHandler": {
      "additionalProperties": false,
      "properties": {
        "exec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
        },
        "httpGet": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
        },
        "tcpSocket": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.LimitRangeItem": {
      "additionalProperties": false,
      "properties": {
        "default": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "defaultRequest": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "max": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "maxLimitRequestRatio": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "min": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.LimitRangeSpec": {
      "additionalProperties": false,
      "properties": {
        "limits": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LimitRangeItem"
          },
          "type": "array"
        }
      },
      "required": [
        "limits"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.LocalObjectReference": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.LocalVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.NFSVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "server": {
          "type": "string"
        }
      },
      "required": [
        "server",
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.NamespaceSpec": {
      "additionalProperties": false,
      "properties": {
        "finalizers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeAffinity": {
      "additionalProperties": false,
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PreferredSchedulingTerm"
          },
          "type": "array"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeSelector": {
      "additionalProperties": false,
      "properties": {
        "nodeSelectorTerms": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
          },
          "type": "array"
        }
      },
      "required": [
        "nodeSelectorTerms"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.NodeSelectorRequirement": {
      "additionalProperties": false,
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "key",
        "operator"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.NodeSelectorTerm": {
      "additionalProperties": false,
      "properties": {
        "matchExpressions": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          },
          "type": "array"
        },
        "matchFields": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ObjectFieldSelector": {
      "additionalProperties": false,
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldPath": {
          "type": "string"
        }
      },
      "required": [
        "fieldPath"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ObjectReference": {
      "additionalProperties": false,
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldPath": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaim": {
      "additionalProperties": false,
      "properties": {
        "apiVersion": {
          "enum": [
            "v1"
          ],
          "type": "string"
        },
        "kind": {
          "enum": [
            "PersistentVolumeClaim"
          ],
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimStatus"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolumeClaim",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimCondition": {
      "additionalProperties": false,
      "properties": {
        "lastProbeTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "status"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimSpec": {
      "additionalProperties": false,
      "properties": {
        "accessModes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dataSource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "dataSourceRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedObjectReference"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "storageClassName": {
          "type": "string"
        },
        "volumeMode": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimStatus": {
      "additionalProperties": false,
      "properties": {
        "accessModes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allocatedResourceStatuses": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "x-kubernetes-map-type": "granular"
        },
        "allocatedResources": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "capacity": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "conditions": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimCondition"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "phase": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimTemplate": {
      "additionalProperties": false,
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        }
      },
      "required": [
        "spec"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "claimName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "required": [
        "claimName"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PersistentVolumeSpec": {
      "additionalProperties": false,
      "properties": {
        "accessModes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "awsElasticBlockStore": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "azureFile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFilePersistentVolumeSource"
        },
        "capacity": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "cephfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSPersistentVolumeSource"
        },
        "cinder": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderPersistentVolumeSource"
        },
        "claimRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference",
          "x-kubernetes-map-type": "granular"
        },
        "csi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIPersistentVolumeSource"
        },
        "fc": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
        },
        "flexVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexPersistentVolumeSource"
        },
        "flocker": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "glusterfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource"
        },
        "hostPath": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "iscsi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIPersistentVolumeSource"
        },
        "local": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalVolumeSource"
        },
        "mountOptions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
        },
        "nodeAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.VolumeNodeAffinity"
        },
        "persistentVolumeReclaimPolicy": {
          "type": "string"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "quobyte": {
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "rbd": {
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDPersistentVolumeSource"
        },
        "scaleIO": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource"
        },
        "storageClassName": {
          "type": "string"
        },
        "storageos": {
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSPersistentVolumeSource"
        },
        "volumeMode": {
          "type": "string"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "pdID": {
          "type": "string"
        }
      },
      "required": [
        "pdID"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodAffinity": {
      "additionalProperties": false,
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          },
          "type": "array"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodAffinityTerm": {
      "additionalProperties": false,
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "namespaces": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "topologyKey": {
          "type": "string"
        }
      },
      "required": [
        "topologyKey"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodAntiAffinity": {
      "additionalProperties": false,
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          },
          "type": "array"
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodDNSConfig": {
      "additionalProperties": false,
      "properties": {
        "nameservers": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "options": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfigOption"
          },
          "type": "array"
        },
        "searches": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodDNSConfigOption": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodOS": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodReadinessGate": {
      "additionalProperties": false,
      "properties": {
        "conditionType": {
          "type": "string"
        }
      },
      "required": [
        "conditionType"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodResourceClaim": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ClaimSource"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodSchedulingGate": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodSecurityContext": {
      "additionalProperties": false,
      "properties": {
        "fsGroup": {
          "format": "int64",
          "type": "integer"
        },
        "fsGroupChangePolicy": {
          "type": "string"
        },
        "runAsGroup": {
          "format": "int64",
          "type": "integer"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "format": "int64",
          "type": "integer"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
        },
        "seccompProfile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
        },
        "supplementalGroups": {
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "type": "array"
        },
        "sysctls": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Sysctl"
          },
          "type": "array"
        },
        "windowsOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PodSpec": {
      "additionalProperties": false,
      "properties": {
        "activeDeadlineSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "affinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "automountServiceAccountToken": {
          "type": "boolean"
        },
        "containers": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "dnsConfig": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "type": "string"
        },
        "enableServiceLinks": {
          "type": "boolean"
        },
        "ephemeralContainers": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralContainer"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "hostAliases": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "ip",
          "x-kubernetes-patch-strategy": "merge"
        },
        "hostIPC": {
          "type": "boolean"
        },
        "hostNetwork": {
          "type": "boolean"
        },
        "hostPID": {
          "type": "boolean"
        },
        "hostUsers": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "imagePullSecrets": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "initContainers": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        },
        "os": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodOS"
        },
        "overhead": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "preemptionPolicy": {
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        },
        "priorityClassName": {
          "type": "string"
        },
        "readinessGates": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          },
          "type": "array"
        },
        "resourceClaims": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodResourceClaim"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge,retainKeys"
        },
        "restartPolicy": {
          "type": "string"
        },
        "runtimeClassName": {
          "type": "string"
        },
        "schedulerName": {
          "type": "string"
        },
        "schedulingGates": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodSchedulingGate"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "securityContext": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext"
        },
        "serviceAccount": {
          "type": "string"
        },
        "serviceAccountName": {
          "type": "string"
        },
        "setHostnameAsFQDN": {
          "type": "boolean"
        },
        "shareProcessNamespace": {
          "type": "boolean"
        },
        "subdomain": {
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "tolerations": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          },
          "type": "array"
        },
        "topologySpreadConstraints": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "topologyKey",
            "whenUnsatisfiable"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "topologyKey",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumes": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge,retainKeys"
        }
      },
      "required": [
        "containers"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PodTemplateSpec": {
      "additionalProperties": false,
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.PortworxVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeID": {
          "type": "string"
        }
      },
      "required": [
        "volumeID"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.PreferredSchedulingTerm": {
      "additionalProperties": false,
      "properties": {
        "preference": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "weight",
        "preference"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Probe": {
      "additionalProperties": false,
      "properties": {
        "exec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
        },
        "failureThreshold": {
          "format": "int32",
          "type": "integer"
        },
        "grpc": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GRPCAction"
        },
        "httpGet": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
        },
        "initialDelaySeconds": {
          "format": "int32",
          "type": "integer"
        },
        "periodSeconds": {
          "format": "int32",
          "type": "integer"
        },
        "successThreshold": {
          "format": "int32",
          "type": "integer"
        },
        "tcpSocket": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
        },
        "terminationGracePeriodSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "timeoutSeconds": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ProjectedVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "defaultMode": {
          "format": "int32",
          "type": "integer"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeProjection"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.QuobyteVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "group": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "registry": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        }
      },
      "required": [
        "registry",
        "volume"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.RBDPersistentVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "keyring": {
          "type": "string"
        },
        "monitors": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pool": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "user": {
          "type": "string"
        }
      },
      "required": [
        "monitors",
        "image"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.RBDVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "keyring": {
          "type": "string"
        },
        "monitors": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pool": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "user": {
          "type": "string"
        }
      },
      "required": [
        "monitors",
        "image"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ResourceClaim": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ResourceFieldSelector": {
      "additionalProperties": false,
      "properties": {
        "containerName": {
          "type": "string"
        },
        "divisor": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "resource": {
          "type": "string"
        }
      },
      "required": [
        "resource"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ResourceQuotaSpec": {
      "additionalProperties": false,
      "properties": {
        "hard": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "scopeSelector": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ScopeSelector"
        },
        "scopes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ResourceRequirements": {
      "additionalProperties": false,
      "properties": {
        "claims": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ResourceClaim"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "limits": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "requests": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SELinuxOptions": {
      "additionalProperties": false,
      "properties": {
        "level": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "protectionDomain": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "sslEnabled": {
          "type": "boolean"
        },
        "storageMode": {
          "type": "string"
        },
        "storagePool": {
          "type": "string"
        },
        "system": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "required": [
        "gateway",
        "system",
        "secretRef"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ScaleIOVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "protectionDomain": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "sslEnabled": {
          "type": "boolean"
        },
        "storageMode": {
          "type": "string"
        },
        "storagePool": {
          "type": "string"
        },
        "system": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "required": [
        "gateway",
        "system",
        "secretRef"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ScopeSelector": {
      "additionalProperties": false,
      "properties": {
        "matchExpressions": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ScopedResourceSelectorRequirement"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ScopedResourceSelectorRequirement": {
      "additionalProperties": false,
      "properties": {
        "operator": {
          "type": "string"
        },
        "scopeName": {
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "scopeName",
        "operator"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.SeccompProfile": {
      "additionalProperties": false,
      "properties": {
        "localhostProfile": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "localhostProfile": "LocalhostProfile"
          }
        }
      ]
    },
    "io.k8s.api.core.v1.SecretEnvSource": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SecretKeySelector": {
      "additionalProperties": false,
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "required": [
        "key"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.SecretProjection": {
      "additionalProperties": false,
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SecretReference": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.SecretVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "defaultMode": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          },
          "type": "array"
        },
        "optional": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SecurityContext": {
      "additionalProperties": false,
      "properties": {
        "allowPrivilegeEscalation": {
          "type": "boolean"
        },
        "capabilities": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities"
        },
        "privileged": {
          "type": "boolean"
        },
        "procMount": {
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "type": "boolean"
        },
        "runAsGroup": {
          "format": "int64",
          "type": "integer"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "format": "int64",
          "type": "integer"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
        },
        "seccompProfile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
        },
        "windowsOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.ServiceAccountTokenProjection": {
      "additionalProperties": false,
      "properties": {
        "audience": {
          "type": "string"
        },
        "expirationSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "path": {
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ServicePort": {
      "additionalProperties": false,
      "properties": {
        "appProtocol": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nodePort": {
          "format": "int32",
          "type": "integer"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "type": "string"
        },
        "targetPort": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.ServiceSpec": {
      "additionalProperties": false,
      "properties": {
        "allocateLoadBalancerNodePorts": {
          "type": "boolean"
        },
        "clusterIP": {
          "type": "string"
        },
        "clusterIPs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "externalIPs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "externalName": {
          "type": "string"
        },
        "externalTrafficPolicy": {
          "type": "string"
        },
        "healthCheckNodePort": {
          "format": "int32",
          "type": "integer"
        },
        "internalTrafficPolicy": {
          "type": "string"
        },
        "ipFamilies": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "ipFamilyPolicy": {
          "type": "string"
        },
        "loadBalancerClass": {
          "type": "string"
        },
        "loadBalancerIP": {
          "type": "string"
        },
        "loadBalancerSourceRanges": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ports": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ServicePort"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "port",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "port",
          "x-kubernetes-patch-strategy": "merge"
        },
        "publishNotReadyAddresses": {
          "type": "boolean"
        },
        "selector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        },
        "sessionAffinity": {
          "type": "string"
        },
        "sessionAffinityConfig": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SessionAffinityConfig"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.SessionAffinityConfig": {
      "additionalProperties": false,
      "properties": {
        "clientIP": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ClientIPConfig"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.StorageOSPersistentVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "volumeName": {
          "type": "string"
        },
        "volumeNamespace": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.StorageOSVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "volumeName": {
          "type": "string"
        },
        "volumeNamespace": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.Sysctl": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.TCPSocketAction": {
      "additionalProperties": false,
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Toleration": {
      "additionalProperties": false,
      "properties": {
        "effect": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "tolerationSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.TopologySelectorLabelRequirement": {
      "additionalProperties": false,
      "properties": {
        "key": {
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "key",
        "values"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.TopologySelectorTerm": {
      "additionalProperties": false,
      "properties": {
        "matchLabelExpressions": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySelectorLabelRequirement"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.TopologySpreadConstraint": {
      "additionalProperties": false,
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "matchLabelKeys": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "maxSkew": {
          "format": "int32",
          "type": "integer"
        },
        "minDomains": {
          "format": "int32",
          "type": "integer"
        },
        "nodeAffinityPolicy": {
          "type": "string"
        },
        "nodeTaintsPolicy": {
          "type": "string"
        },
        "topologyKey": {
          "type": "string"
        },
        "whenUnsatisfiable": {
          "type": "string"
        }
      },
      "required": [
        "maxSkew",
        "topologyKey",
        "whenUnsatisfiable"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.TypedLocalObjectReference": {
      "additionalProperties": false,
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.TypedObjectReference": {
      "additionalProperties": false,
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.Volume": {
      "additionalProperties": false,
      "properties": {
        "awsElasticBlockStore": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "azureFile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"
        },
        "cephfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"
        },
        "cinder": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource"
        },
        "configMap": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"
        },
        "csi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIVolumeSource"
        },
        "downwardAPI": {
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "ephemeral": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralVolumeSource"
        },
        "fc": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
        },
        "flexVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource"
        },
        "flocker": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "gitRepo": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource"
        },
        "glusterfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"
        },
        "hostPath": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "iscsi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"
        },
        "name": {
          "type": "string"
        },
        "nfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "projected": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"
        },
        "quobyte": {
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "rbd": {
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource"
        },
        "scaleIO": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"
        },
        "secret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource"
        },
        "storageos": {
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeDevice": {
      "additionalProperties": false,
      "properties": {
        "devicePath": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "devicePath"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeMount": {
      "additionalProperties": false,
      "properties": {
        "mountPath": {
          "type": "string"
        },
        "mountPropagation": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "subPath": {
          "type": "string"
        },
        "subPathExpr": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "mountPath"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeNodeAffinity": {
      "additionalProperties": false,
      "properties": {
        "required": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.VolumeProjection": {
      "additionalProperties": false,
      "properties": {
        "configMap": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapProjection"
        },
        "downwardAPI": {
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIProjection"
        },
        "secret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretProjection"
        },
        "serviceAccountToken": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceAccountTokenProjection"
        }
      },
      "type": "object"
    },
    "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource": {
      "additionalProperties": false,
      "properties": {
        "fsType": {
          "type": "string"
        },
        "storagePolicyID": {
          "type": "string"
        },
        "storagePolicyName": {
          "type": "string"
        },
        "volumePath": {
          "type": "string"
        }
      },
      "required": [
        "volumePath"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.WeightedPodAffinityTerm": {
      "additionalProperties": false,
      "properties": {
        "podAffinityTerm": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
        },
        "weight": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "weight",
        "podAffinityTerm"
      ],
      "type": "object"
    },
    "io.k8s.api.core.v1.WindowsSecurityContextOptions": {
      "additionalProperties": false,
      "properties": {
        "gmsaCredentialSpec": {
          "type": "string"
        },
        "gmsaCredentialSpecName": {
          "type": "string"
        },
        "hostProcess": {
          "type": "boolean"
        },
        "runAsUserName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration": {
      "additionalProperties": false,
      "properties": {
        "lendablePercent": {
          "format": "int32",
          "type": "integer"
        },
        "nominalConcurrencyShares": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec": {
      "additionalProperties": false,
      "properties": {
        "distinguisherMethod": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowDistinguisherMethod"
        },
        "matchingPrecedence": {
          "format": "int32",
          "type": "integer"
        },
        "priorityLevelConfiguration": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference"
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "priorityLevelConfiguration"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.GroupSubject": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.LimitResponse": {
      "additionalProperties": false,
      "properties": {
        "queuing": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "queuing": "Queuing"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration": {
      "additionalProperties": false,
      "properties": {
        "borrowingLimitPercent": {
          "format": "int32",
          "type": "integer"
        },
        "lendablePercent": {
          "format": "int32",
          "type": "integer"
        },
        "limitResponse": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.LimitResponse"
        },
        "nominalConcurrencyShares": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule": {
      "additionalProperties": false,
      "properties": {
        "nonResourceURLs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "verbs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "required": [
        "verbs",
        "nonResourceURLs"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects": {
      "additionalProperties": false,
      "properties": {
        "nonResourceRules": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resourceRules": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "subjects": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.Subject"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "subjects"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationReference": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec": {
      "additionalProperties": false,
      "properties": {
        "exempt": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.ExemptPriorityLevelConfiguration"
        },
        "limited": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.LimitedPriorityLevelConfiguration"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "exempt": "Exempt",
            "limited": "Limited"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta3.QueuingConfiguration": {
      "additionalProperties": false,
      "properties": {
        "handSize": {
          "format": "int32",
          "type": "integer"
        },
        "queueLengthLimit": {
          "format": "int32",
          "type": "integer"
        },
        "queues": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule": {
      "additionalProperties": false,
      "properties": {
        "apiGroups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "clusterScope": {
          "type": "boolean"
        },
        "namespaces": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "resources": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        },
        "verbs": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "required": [
        "verbs",
        "apiGroups",
        "resources"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.flowcontrol.v1beta3.Subject": {
      "additionalProperties": false,
      "properties": {
        "group": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.GroupSubject"
        },
        "kind": {
          "type": "string"
        },
        "serviceAccount": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.ServiceAccountSubject"
        },
        "user": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.UserSubject"
        }
      },
      "required": [
        "kind"
      ],
      "type": "object",
      "x-kubernetes-unions": [
        {
          "discriminator": "kind",
          "fields-to-discriminateBy": {
            "group": "Group",
            "serviceAccount": "ServiceAccount",
            "user": "User"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta3.UserSubject": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.HTTPIngressPath": {
      "additionalProperties": false,
      "properties": {
        "backend": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressBackend"
        },
        "path": {
          "type": "string"
        },
        "pathType": {
          "type": "string"
        }
      },
      "required": [
        "pathType",
        "backend"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.HTTPIngressRuleValue": {
      "additionalProperties": false,
      "properties": {
        "paths": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.HTTPIngressPath"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "required": [
        "paths"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.IPBlock": {
      "additionalProperties": false,
      "properties": {
        "cidr": {
          "type": "string"
        },
        "except": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "cidr"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressBackend": {
      "additionalProperties": false,
      "properties": {
        "resource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressServiceBackend"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressClassParametersReference": {
      "additionalProperties": false,
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressClassSpec": {
      "additionalProperties": false,
      "properties": {
        "controller": {
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressClassParametersReference"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressRule": {
      "additionalProperties": false,
      "properties": {
        "host": {
          "type": "string"
        },
        "http": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.HTTPIngressRuleValue"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressServiceBackend": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.ServiceBackendPort"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressSpec": {
      "additionalProperties": false,
      "properties": {
        "defaultBackend": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressBackend"
        },
        "ingressClassName": {
          "type": "string"
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressRule"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "tls": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressTLS"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.IngressTLS": {
      "additionalProperties": false,
      "properties": {
        "hosts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "secretName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.NetworkPolicyEgressRule": {
      "additionalProperties": false,
      "properties": {
        "ports": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
          },
          "type": "array"
        },
        "to": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.NetworkPolicyIngressRule": {
      "additionalProperties": false,
      "properties": {
        "from": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
          },
          "type": "array"
        },
        "ports": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.NetworkPolicyPeer": {
      "additionalProperties": false,
      "properties": {
        "ipBlock": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IPBlock"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "podSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.NetworkPolicyPort": {
      "additionalProperties": false,
      "properties": {
        "endPort": {
          "format": "int32",
          "type": "integer"
        },
        "port": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "protocol": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.networking.v1.NetworkPolicySpec": {
      "additionalProperties": false,
      "properties": {
        "egress": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
          },
          "type": "array"
        },
        "ingress": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
          },
          "type": "array"
        },
        "podSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "policyTypes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "podSelector"
      ],
      "type": "object"
    },
    "io.k8s.api.networking.v1.ServiceBackendPort": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "io.k8s.api.policy.v1.PodDisruptionBudgetSpec": {
      "additionalProperties": false,
      "properties": {
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "minAvailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "x-kubernetes-patch-strategy": "replace"
        },
        "unhealthyPodEvictionPolicy": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.api.rbac.v1.AggregationRule": {
      "additionalProperties": false,
      "properties": {
        "clusterRoleSelectors": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "io.k8s.api.rbac.v1.PolicyRule": {
      "additionalProperties": false,
      "properties": {
        "apiGroups": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nonResourceURLs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resourceNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resources": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "verbs": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "verbs"
      ],
      "type": "object"
    },
    "io.k8s.api.rbac.v1.RoleRef": {
      "additionalProperties": false,
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "apiGroup",
        "kind",
        "name"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.rbac.v1.Subject": {
      "additionalProperties": false,
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.storage.v1.CSIDriverSpec": {
      "additionalProperties": false,
      "properties": {
        "attachRequired": {
          "type": "boolean"
        },
        "fsGroupPolicy": {
          "type": "string"
        },
        "podInfoOnMount": {
          "type": "boolean"
        },
        "requiresRepublish": {
          "type": "boolean"
        },
        "seLinuxMount": {
          "type": "boolean"
        },
        "storageCapacity": {
          "type": "boolean"
        },
        "tokenRequests": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.TokenRequest"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "volumeLifecycleModes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-list-type": "set"
        }
      },
      "type": "object"
    },
    "io.k8s.api.storage.v1.TokenRequest": {
      "additionalProperties": false,
      "properties": {
        "audience": {
          "type": "string"
        },
        "expirationSeconds": {
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "audience"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "jsonPath": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "type",
        "jsonPath"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion": {
      "additionalProperties": false,
      "properties": {
        "strategy": {
          "type": "string"
        },
        "webhook": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion"
        }
      },
      "required": [
        "strategy"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames": {
      "additionalProperties": false,
      "properties": {
        "categories": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "kind": {
          "type": "string"
        },
        "listKind": {
          "type": "string"
        },
        "plural": {
          "type": "string"
        },
        "shortNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "singular": {
          "type": "string"
        }
      },
      "required": [
        "plural",
        "kind"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec": {
      "additionalProperties": false,
      "properties": {
        "conversion": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion"
        },
        "group": {
          "type": "string"
        },
        "names": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames"
        },
        "preserveUnknownFields": {
          "type": "boolean"
        },
        "scope": {
          "type": "string"
        },
        "versions": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion"
          },
          "type": "array"
        }
      },
      "required": [
        "group",
        "names",
        "scope",
        "versions"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion": {
      "additionalProperties": false,
      "properties": {
        "additionalPrinterColumns": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition"
          },
          "type": "array"
        },
        "deprecated": {
          "type": "boolean"
        },
        "deprecationWarning": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation"
        },
        "served": {
          "type": "boolean"
        },
        "storage": {
          "type": "boolean"
        },
        "subresources": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources"
        }
      },
      "required": [
        "name",
        "served",
        "storage"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale": {
      "additionalProperties": false,
      "properties": {
        "labelSelectorPath": {
          "type": "string"
        },
        "specReplicasPath": {
          "type": "string"
        },
        "statusReplicasPath": {
          "type": "string"
        }
      },
      "required": [
        "specReplicasPath",
        "statusReplicasPath"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus": {
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources": {
      "additionalProperties": false,
      "properties": {
        "scale": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus"
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation": {
      "additionalProperties": false,
      "properties": {
        "openAPIV3Schema": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps": {
      "additionalProperties": false,
      "properties": {
        "$ref": {
          "type": "string"
        },
        "$schema": {
          "type": "string"
        },
        "additionalItems": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool"
        },
        "additionalProperties": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool"
        },
        "allOf": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "array"
        },
        "anyOf": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "array"
        },
        "default": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
        },
        "definitions": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "object"
        },
        "dependencies": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray"
          },
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "enum": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
          },
          "type": "array"
        },
        "example": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
        },
        "exclusiveMaximum": {
          "type": "boolean"
        },
        "exclusiveMinimum": {
          "type": "boolean"
        },
        "externalDocs": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation"
        },
        "format": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray"
        },
        "maxItems": {
          "format": "int64",
          "type": "integer"
        },
        "maxLength": {
          "format": "int64",
          "type": "integer"
        },
        "maxProperties": {
          "format": "int64",
          "type": "integer"
        },
        "maximum": {
          "format": "double",
          "type": "number"
        },
        "minItems": {
          "format": "int64",
          "type": "integer"
        },
        "minLength": {
          "format": "int64",
          "type": "integer"
        },
        "minProperties": {
          "format": "int64",
          "type": "integer"
        },
        "minimum": {
          "format": "double",
          "type": "number"
        },
        "multipleOf": {
          "format": "double",
          "type": "number"
        },
        "not": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
        },
        "nullable": {
          "type": "boolean"
        },
        "oneOf": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "array"
        },
        "pattern": {
          "type": "string"
        },
        "patternProperties": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "object"
        },
        "properties": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "object"
        },
        "required": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uniqueItems": {
          "type": "boolean"
        },
        "x-kubernetes-embedded-resource": {
          "type": "boolean"
        },
        "x-kubernetes-int-or-string": {
          "type": "boolean"
        },
        "x-kubernetes-list-map-keys": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "x-kubernetes-list-type": {
          "type": "string"
        },
        "x-kubernetes-map-type": {
          "type": "string"
        },
        "x-kubernetes-preserve-unknown-fields": {
          "type": "boolean"
        },
        "x-kubernetes-validations": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "rule"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "rule",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "namespace",
        "name"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule": {
      "additionalProperties": false,
      "properties": {
        "fieldPath": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "messageExpression": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "rule": {
          "type": "string"
        }
      },
      "required": [
        "rule"
      ],
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig": {
      "additionalProperties": false,
      "properties": {
        "caBundle": {
          "format": "byte",
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion": {
      "additionalProperties": false,
      "properties": {
        "clientConfig": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig"
        },
        "conversionReviewVersions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "conversionReviewVersions"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
      "additionalProperties": false,
      "properties": {
        "matchExpressions": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
          },
          "type": "array"
        },
        "matchLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
      "additionalProperties": false,
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "key",
        "operator"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
      "additionalProperties": false,
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldsType": {
          "type": "string"
        },
        "fieldsV1": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
        },
        "manager": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "subresource": {
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deletionGracePeriodSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "finalizers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "type": "string"
        },
        "generation": {
          "format": "int64",
          "type": "integer"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "managedFields": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "ownerReferences": {
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "type": "string"
        },
        "selfLink": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "additionalProperties": false,
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "blockOwnerDeletion": {
          "type": "boolean"
        },
        "controller": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ],
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
      "format": "date-time",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "integer"
        }
      ]
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec": {
      "additionalProperties": false,
      "properties": {
        "caBundle": {
          "format": "byte",
          "type": "string",
          "x-kubernetes-list-type": "atomic"
        },
        "group": {
          "type": "string"
        },
        "groupPriorityMinimum": {
          "format": "int32",
          "type": "integer"
        },
        "insecureSkipTLSVerify": {
          "type": "boolean"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference"
        },
        "version": {
          "type": "string"
        },
        "versionPriority": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "groupPriorityMinimum",
        "versionPriority"
      ],
      "type": "object"
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "metachart.api.core.v1.Container": {
      "additionalProperties": false,
      "properties": {
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "env": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          },
          "type": "array"
        },
        "imageRef": {
          "$ref": "#/definitions/metachart.interface.FQDNitem"
        },
        "lifecycle": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "ports": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resizePolicy": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerResizePolicy"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "restartPolicy": {
          "type": "string"
        },
        "securityContext": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "type": "boolean"
        },
        "stdinOnce": {
          "type": "boolean"
        },
        "terminationMessagePath": {
          "type": "string"
        },
        "terminationMessagePolicy": {
          "type": "string"
        },
        "tty": {
          "type": "boolean"
        },
        "volumeDevices": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "type": "string"
        }
      },
      "required": [
        "imageRef"
      ],
      "type": "object"
    },
    "metachart.api.core.v1.ContainerList": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.core.v1.Container"
        }
      },
      "type": "object"
    },
    "metachart.api.core.v1.Pod": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/metachart.api.core.v1.PodSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Pod",
          "version": "v1"
        }
      ]
    },
    "metachart.api.core.v1.PodSpec": {
      "additionalProperties": false,
      "properties": {
        "activeDeadlineSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "affinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "automountServiceAccountToken": {
          "type": "boolean"
        },
        "containers": {
          "$ref": "#/definitions/metachart.api.core.v1.ContainerList"
        },
        "dnsConfig": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "type": "string"
        },
        "enableServiceLinks": {
          "type": "boolean"
        },
        "ephemeralContainers": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralContainer"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "hostAliases": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "ip",
          "x-kubernetes-patch-strategy": "merge"
        },
        "hostIPC": {
          "type": "boolean"
        },
        "hostNetwork": {
          "type": "boolean"
        },
        "hostPID": {
          "type": "boolean"
        },
        "hostUsers": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "imagePullSecrets": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "initContainers": {
          "$ref": "#/definitions/metachart.api.core.v1.ContainerList"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeSelector": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        },
        "os": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodOS"
        },
        "overhead": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          },
          "type": "object"
        },
        "preemptionPolicy": {
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        },
        "priorityClassName": {
          "type": "string"
        },
        "readinessGates": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          },
          "type": "array"
        },
        "resourceClaims": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodResourceClaim"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge,retainKeys"
        },
        "restartPolicy": {
          "type": "string"
        },
        "runtimeClassName": {
          "type": "string"
        },
        "schedulerName": {
          "type": "string"
        },
        "schedulingGates": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodSchedulingGate"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "securityContext": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext"
        },
        "serviceAccount": {
          "type": "string"
        },
        "serviceAccountName": {
          "type": "string"
        },
        "setHostnameAsFQDN": {
          "type": "boolean"
        },
        "shareProcessNamespace": {
          "type": "boolean"
        },
        "subdomain": {
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "tolerations": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          },
          "type": "array"
        },
        "topologySpreadConstraints": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "topologyKey",
            "whenUnsatisfiable"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "topologyKey",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumes": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge,retainKeys"
        }
      },
      "required": [
        "containers"
      ],
      "type": "object"
    },
    "metachart.api.internal.Image": {
      "additionalProperties": false,
      "properties": {
        "pullPolicy": {
          "enum": [
            "Always",
            "IfNotPresent"
          ],
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "required": [
        "repository",
        "tag",
        "pullPolicy"
      ],
      "type": "object"
    },
    "metachart.api.internal.volumeClaimTemplates": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
        }
      },
      "type": "object"
    },
    "metachart.api.io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "webhooks": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhook"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "MutatingWebhookConfiguration",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "webhooks": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhook"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingWebhookConfiguration",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.apps.v1.DaemonSet": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "related": {
          "properties": {
            "services": {
              "additionalProperties": false,
              "patternProperties": {
                "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
                  "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.Service"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "spec": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.apps.v1.DaemonSetSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "DaemonSet",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.apps.v1.DaemonSetSpec": {
      "additionalProperties": false,
      "properties": {
        "minReadySeconds": {
          "format": "int32",
          "type": "integer"
        },
        "pod": {
          "$ref": "#/definitions/metachart.api.core.v1.Pod"
        },
        "revisionHistoryLimit": {
          "format": "int32",
          "type": "integer"
        },
        "updateStrategy": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetUpdateStrategy"
        }
      },
      "required": [
        "pod"
      ],
      "type": "object"
    },
    "metachart.api.io.k8s.api.apps.v1.Deployment": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "related": {
          "properties": {
            "poddisruptionbudgets": {
              "additionalProperties": false,
              "patternProperties": {
                "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
                  "$ref": "#/definitions/metachart.api.io.k8s.api.policy.v1.PodDisruptionBudget"
                }
              },
              "type": "object"
            },
            "services": {
              "additionalProperties": false,
              "patternProperties": {
                "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
                  "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.Service"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "spec": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.apps.v1.DeploymentSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "Deployment",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.apps.v1.DeploymentSpec": {
      "additionalProperties": false,
      "properties": {
        "minReadySeconds": {
          "format": "int32",
          "type": "integer"
        },
        "paused": {
          "type": "boolean"
        },
        "pod": {
          "$ref": "#/definitions/metachart.api.core.v1.Pod"
        },
        "progressDeadlineSeconds": {
          "format": "int32",
          "type": "integer"
        },
        "replicas": {
          "format": "int32",
          "type": "integer"
        },
        "revisionHistoryLimit": {
          "format": "int32",
          "type": "integer"
        },
        "strategy": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentStrategy",
          "x-kubernetes-patch-strategy": "retainKeys"
        }
      },
      "required": [
        "pod"
      ],
      "type": "object"
    },
    "metachart.api.io.k8s.api.apps.v1.StatefulSet": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "related": {
          "properties": {
            "poddisruptionbudgets": {
              "additionalProperties": false,
              "patternProperties": {
                "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
                  "$ref": "#/definitions/metachart.api.io.k8s.api.policy.v1.PodDisruptionBudget"
                }
              },
              "type": "object"
            },
            "services": {
              "additionalProperties": false,
              "patternProperties": {
                "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
                  "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.Service"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "spec": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.apps.v1.StatefulSetSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "StatefulSet",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.apps.v1.StatefulSetSpec": {
      "additionalProperties": false,
      "properties": {
        "minReadySeconds": {
          "format": "int32",
          "type": "integer"
        },
        "ordinals": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetOrdinals"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetPersistentVolumeClaimRetentionPolicy"
        },
        "pod": {
          "$ref": "#/definitions/metachart.api.core.v1.Pod"
        },
        "podManagementPolicy": {
          "type": "string"
        },
        "replicas": {
          "format": "int32",
          "type": "integer"
        },
        "revisionHistoryLimit": {
          "format": "int32",
          "type": "integer"
        },
        "serviceName": {
          "type": "string"
        },
        "updateStrategy": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetUpdateStrategy"
        },
        "volumeClaimTemplates": {
          "$ref": "#/definitions/metachart.api.internal.volumeClaimTemplates"
        }
      },
      "required": [
        "serviceName",
        "pod"
      ],
      "type": "object"
    },
    "metachart.api.io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "HorizontalPodAutoscaler",
          "version": "v2"
        }
      ]
    },
    "metachart.api.io.k8s.api.batch.v1.CronJob": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.batch.v1.CronJobSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "batch",
          "kind": "CronJob",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.batch.v1.CronJobSpec": {
      "additionalProperties": false,
      "properties": {
        "concurrencyPolicy": {
          "type": "string"
        },
        "failedJobsHistoryLimit": {
          "format": "int32",
          "type": "integer"
        },
        "job": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.batch.v1.Job"
        },
        "schedule": {
          "type": "string"
        },
        "startingDeadlineSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "successfulJobsHistoryLimit": {
          "format": "int32",
          "type": "integer"
        },
        "suspend": {
          "type": "boolean"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "required": [
        "schedule",
        "job"
      ],
      "type": "object"
    },
    "metachart.api.io.k8s.api.batch.v1.Job": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.batch.v1.JobSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "batch",
          "kind": "Job",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.batch.v1.JobSpec": {
      "additionalProperties": false,
      "properties": {
        "activeDeadlineSeconds": {
          "format": "int64",
          "type": "integer"
        },
        "backoffLimit": {
          "format": "int32",
          "type": "integer"
        },
        "backoffLimitPerIndex": {
          "format": "int32",
          "type": "integer"
        },
        "completionMode": {
          "type": "string"
        },
        "completions": {
          "format": "int32",
          "type": "integer"
        },
        "manualSelector": {
          "type": "boolean"
        },
        "maxFailedIndexes": {
          "format": "int32",
          "type": "integer"
        },
        "parallelism": {
          "format": "int32",
          "type": "integer"
        },
        "pod": {
          "$ref": "#/definitions/metachart.api.core.v1.Pod"
        },
        "podFailurePolicy": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.PodFailurePolicy"
        },
        "podReplacementPolicy": {
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "suspend": {
          "type": "boolean"
        },
        "ttlSecondsAfterFinished": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "pod"
      ],
      "type": "object"
    },
    "metachart.api.io.k8s.api.certificates.v1.CertificateSigningRequest": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestSpec"
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "certificates.k8s.io",
          "kind": "CertificateSigningRequest",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.core.v1.ConfigMap": {
      "additionalProperties": false,
      "properties": {
        "binaryData": {
          "additionalProperties": {
            "format": "byte",
            "type": "string"
          },
          "type": "object"
        },
        "data": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "immutable": {
          "type": "boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ConfigMap",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.core.v1.LimitRange": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LimitRangeSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "LimitRange",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.core.v1.Namespace": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NamespaceSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Namespace",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.core.v1.PersistentVolume": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolume",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.core.v1.PersistentVolumeClaim": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolumeClaim",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.core.v1.PodTemplate": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PodTemplate",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.core.v1.ResourceQuota": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuotaSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ResourceQuota",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.core.v1.Secret": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "additionalProperties": {
            "format": "byte",
            "type": "string"
          },
          "type": "object"
        },
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "immutable": {
          "type": "boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "stringData": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Secret",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.core.v1.Service": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Service",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.core.v1.ServiceAccount": {
      "additionalProperties": false,
      "properties": {
        "automountServiceAccountToken": {
          "type": "boolean"
        },
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "imagePullSecrets": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          },
          "type": "array"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "secrets": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
          },
          "type": "array",
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ServiceAccount",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.flowcontrol.v1beta3.FlowSchema": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "FlowSchema",
          "version": "v1beta3"
        }
      ]
    },
    "metachart.api.io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "PriorityLevelConfiguration",
          "version": "v1beta3"
        }
      ]
    },
    "metachart.api.io.k8s.api.networking.v1.Ingress": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "Ingress",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.networking.v1.IngressClass": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressClassSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IngressClass",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.networking.v1.NetworkPolicy": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicySpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "NetworkPolicy",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.policy.v1.PodDisruptionBudget": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.policy.v1.PodDisruptionBudgetSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy",
          "kind": "PodDisruptionBudget",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.rbac.v1.ClusterRole": {
      "additionalProperties": false,
      "properties": {
        "aggregationRule": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1.AggregationRule"
        },
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.rbac.v1.ClusterRoleBinding": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "roleRef": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef"
        },
        "subjects": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
          },
          "type": "array"
        }
      },
      "required": [
        "roleRef"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRoleBinding",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.rbac.v1.Role": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "rules": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "Role",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.rbac.v1.RoleBinding": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "roleRef": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef"
        },
        "subjects": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
          },
          "type": "array"
        }
      },
      "required": [
        "roleRef"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "RoleBinding",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.scheduling.v1.PriorityClass": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "type": "string"
        },
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "globalDefault": {
          "type": "boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "preemptionPolicy": {
          "type": "string"
        },
        "value": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "value"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "scheduling.k8s.io",
          "kind": "PriorityClass",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.storage.v1.CSIDriver": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.CSIDriverSpec"
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSIDriver",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.api.storage.v1.StorageClass": {
      "additionalProperties": false,
      "properties": {
        "allowVolumeExpansion": {
          "type": "boolean"
        },
        "allowedTopologies": {
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySelectorTerm"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "mountOptions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "provisioner": {
          "type": "string"
        },
        "reclaimPolicy": {
          "type": "string"
        },
        "volumeBindingMode": {
          "type": "string"
        }
      },
      "required": [
        "provisioner"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "StorageClass",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec"
        }
      },
      "required": [
        "spec"
      ],
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiextensions.k8s.io",
          "kind": "CustomResourceDefinition",
          "version": "v1"
        }
      ]
    },
    "metachart.api.io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec"
        }
      },
      "type": "object",
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiregistration.k8s.io",
          "kind": "APIService",
          "version": "v1"
        }
      ]
    },
    "metachart.api.meta.v1.ObjectMeta": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "checksums": {
          "$ref": "#/definitions/metachart.interface.checksums"
        },
        "finalizers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-patch-strategy": "merge"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "metachart.interface.FQDNitem": {
      "pattern": "^[a-z][0-9a-z]*(-[0-9a-z]+)*$",
      "type": "string"
    },
    "metachart.interface.boolean": {
      "type": "boolean"
    },
    "metachart.interface.checksumEntryList": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/definitions/metachart.interface.FQDNitem"
          },
          "type": "array"
        },
        {
          "enum": [
            "*"
          ]
        }
      ]
    },
    "metachart.interface.checksums": {
      "properties": {
        "apiservices": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "certificatesigningrequests": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "clusterrolebindings": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "clusterroles": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "configmaps": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "cronjobs": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "csidrivers": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "customresourcedefinitions": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "daemonsets": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "deployments": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "flowschemas": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "horizontalpodautoscalers": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "images": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "ingressclasses": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "ingresses": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "jobs": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "limitranges": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "mutatingwebhookconfigurations": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "namespaces": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "networkpolicies": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "persistentvolumeclaims": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "persistentvolumes": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "poddisruptionbudgets": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "pods": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "podtemplates": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "priorityclasses": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "prioritylevelconfigurations": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "resourcequotas": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "rolebindings": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "roles": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "secrets": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "serviceaccounts": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "services": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "statefulsets": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "storageclasses": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "validatingwebhookconfigurations": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        }
      },
      "type": "object"
    }
  },
  "properties": {
    "apiservices": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService"
        }
      },
      "type": "object"
    },
    "certificatesigningrequests": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.certificates.v1.CertificateSigningRequest"
        }
      },
      "type": "object"
    },
    "clusterrolebindings": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.rbac.v1.ClusterRoleBinding"
        }
      },
      "type": "object"
    },
    "clusterroles": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.rbac.v1.ClusterRole"
        }
      },
      "type": "object"
    },
    "configmaps": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.ConfigMap"
        }
      },
      "type": "object"
    },
    "context": {
      "description": "Any content which can be used for config rendering without schema defined by the chart",
      "type": "object"
    },
    "cronjobs": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.batch.v1.CronJob"
        }
      },
      "type": "object"
    },
    "csidrivers": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.storage.v1.CSIDriver"
        }
      },
      "type": "object"
    },
    "customresourcedefinitions": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition"
        }
      },
      "type": "object"
    },
    "daemonsets": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.apps.v1.DaemonSet"
        }
      },
      "type": "object"
    },
    "deployments": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.apps.v1.Deployment"
        }
      },
      "type": "object"
    },
    "flowschemas": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.flowcontrol.v1beta3.FlowSchema"
        }
      },
      "type": "object"
    },
    "fullnameOverride": {
      "anyOf": [
        {
          "$ref": "#/definitions/metachart.interface.FQDNitem"
        },
        {
          "type": "null"
        }
      ]
    },
    "horizontalpodautoscalers": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler"
        }
      },
      "type": "object"
    },
    "images": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.internal.Image"
        }
      },
      "type": "object"
    },
    "ingressclasses": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.networking.v1.IngressClass"
        }
      },
      "type": "object"
    },
    "ingresses": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.networking.v1.Ingress"
        }
      },
      "type": "object"
    },
    "jobs": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.batch.v1.Job"
        }
      },
      "type": "object"
    },
    "limitranges": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.LimitRange"
        }
      },
      "type": "object"
    },
    "mutatingwebhookconfigurations": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration"
        }
      },
      "type": "object"
    },
    "namespaces": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.Namespace"
        }
      },
      "type": "object"
    },
    "networkpolicies": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.networking.v1.NetworkPolicy"
        }
      },
      "type": "object"
    },
    "persistentvolumeclaims": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.PersistentVolumeClaim"
        }
      },
      "type": "object"
    },
    "persistentvolumes": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.PersistentVolume"
        }
      },
      "type": "object"
    },
    "poddisruptionbudgets": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.policy.v1.PodDisruptionBudget"
        }
      },
      "type": "object"
    },
    "pods": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.core.v1.Pod"
        }
      },
      "type": "object"
    },
    "podtemplates": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.PodTemplate"
        }
      },
      "type": "object"
    },
    "priorityclasses": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.scheduling.v1.PriorityClass"
        }
      },
      "type": "object"
    },
    "prioritylevelconfigurations": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration"
        }
      },
      "type": "object"
    },
    "resourcequotas": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.ResourceQuota"
        }
      },
      "type": "object"
    },
    "rolebindings": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.rbac.v1.RoleBinding"
        }
      },
      "type": "object"
    },
    "roles": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.rbac.v1.Role"
        }
      },
      "type": "object"
    },
    "secrets": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.Secret"
        }
      },
      "type": "object"
    },
    "serviceaccounts": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.ServiceAccount"
        }
      },
      "type": "object"
    },
    "services": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.Service"
        }
      },
      "type": "object"
    },
    "settings": {
      "additionalProperties": false,
      "properties": {
        "apiservices": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "certificatesigningrequests": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.certificates.v1.CertificateSigningRequest"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "clusterrolebindings": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.rbac.v1.ClusterRoleBinding"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "clusterroles": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.rbac.v1.ClusterRole"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "configmaps": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.ConfigMap"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "containers": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.core.v1.Container"
            }
          },
          "type": "object"
        },
        "cronjobs": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.batch.v1.CronJob"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "csidrivers": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.storage.v1.CSIDriver"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "customresourcedefinitions": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "daemonsets": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.apps.v1.DaemonSet"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "deployments": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.apps.v1.Deployment"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "flowschemas": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.flowcontrol.v1beta3.FlowSchema"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "global": {
          "additionalProperties": false,
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "horizontalpodautoscalers": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.autoscaling.v2.HorizontalPodAutoscaler"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "images": {
          "properties": {
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "ingressclasses": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.networking.v1.IngressClass"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "ingresses": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.networking.v1.Ingress"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "jobs": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.batch.v1.Job"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "limitranges": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.LimitRange"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "mutatingwebhookconfigurations": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "namespaces": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.Namespace"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "networkpolicies": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.networking.v1.NetworkPolicy"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "persistentvolumeclaims": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.PersistentVolumeClaim"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "persistentvolumes": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.PersistentVolume"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "poddisruptionbudgets": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.policy.v1.PodDisruptionBudget"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "pods": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.core.v1.Pod"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "podtemplates": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.PodTemplate"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "priorityclasses": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.scheduling.v1.PriorityClass"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "prioritylevelconfigurations": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfiguration"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "resourcequotas": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.ResourceQuota"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "rolebindings": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.rbac.v1.RoleBinding"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "roles": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.rbac.v1.Role"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "secrets": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.Secret"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "serviceaccounts": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.ServiceAccount"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "services": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.core.v1.Service"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "statefulsets": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.apps.v1.StatefulSet"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "storageclasses": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.storage.v1.StorageClass"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "validatingwebhookconfigurations": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "statefulsets": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.apps.v1.StatefulSet"
        }
      },
      "type": "object"
    },
    "storageclasses": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.storage.v1.StorageClass"
        }
      },
      "type": "object"
    },
    "validatingwebhookconfigurations": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration"
        }
      },
      "type": "object"
    }
  }
}