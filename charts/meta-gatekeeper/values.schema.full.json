{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "definitions": {
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation": {
      "additionalProperties": false,
      "description": "ExternalDocumentation allows referencing an external resource for extended documentation.",
      "properties": {
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON": {
      "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil."
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps": {
      "additionalProperties": false,
      "description": "JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).",
      "properties": {
        "$ref": {
          "type": "string"
        },
        "$schema": {
          "type": "string"
        },
        "additionalItems": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool"
        },
        "additionalProperties": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool"
        },
        "allOf": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "array"
        },
        "anyOf": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "array"
        },
        "default": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON",
          "description": "default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. Defaulting requires spec.preserveUnknownFields to be false."
        },
        "definitions": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "object"
        },
        "dependencies": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray"
          },
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "enum": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
          },
          "type": "array"
        },
        "example": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
        },
        "exclusiveMaximum": {
          "type": "boolean"
        },
        "exclusiveMinimum": {
          "type": "boolean"
        },
        "externalDocs": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation"
        },
        "format": {
          "description": "format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:\n\n- bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like \"0321751043\" or \"978-0321751041\" - isbn10: an ISBN10 number string like \"0321751043\" - isbn13: an ISBN13 number string like \"978-0321751041\" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor: an hexadecimal color code like \"#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like \"rgb(255,255,2559\" - byte: base64 encoded binary data - password: any kind of string - date: a date string like \"2006-01-02\" as defined by full-date in RFC3339 - duration: a duration string like \"22 ns\" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like \"2014-12-15T19:30:20.000Z\" as defined by date-time in RFC3339.",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray"
        },
        "maxItems": {
          "format": "int64",
          "type": "integer"
        },
        "maxLength": {
          "format": "int64",
          "type": "integer"
        },
        "maxProperties": {
          "format": "int64",
          "type": "integer"
        },
        "maximum": {
          "format": "double",
          "type": "number"
        },
        "minItems": {
          "format": "int64",
          "type": "integer"
        },
        "minLength": {
          "format": "int64",
          "type": "integer"
        },
        "minProperties": {
          "format": "int64",
          "type": "integer"
        },
        "minimum": {
          "format": "double",
          "type": "number"
        },
        "multipleOf": {
          "format": "double",
          "type": "number"
        },
        "not": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
        },
        "nullable": {
          "type": "boolean"
        },
        "oneOf": {
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "array"
        },
        "pattern": {
          "type": "string"
        },
        "patternProperties": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "object"
        },
        "properties": {
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          },
          "type": "object"
        },
        "required": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uniqueItems": {
          "type": "boolean"
        },
        "x-kubernetes-embedded-resource": {
          "description": "x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).",
          "type": "boolean"
        },
        "x-kubernetes-int-or-string": {
          "description": "x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:\n\n1) anyOf:\n   - type: integer\n   - type: string\n2) allOf:\n   - anyOf:\n     - type: integer\n     - type: string\n   - ... zero or more",
          "type": "boolean"
        },
        "x-kubernetes-list-map-keys": {
          "description": "x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.\n\nThis tag MUST only be used on lists that have the \"x-kubernetes-list-type\" extension set to \"map\". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).\n\nThe properties specified must either be required or have a default value, to ensure those properties are present for all list items.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "x-kubernetes-list-type": {
          "description": "x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:\n\n1) `atomic`: the list is treated as a single entity, like a scalar.\n     Atomic lists will be entirely replaced when updated. This extension\n     may be used on any type of list (struct, scalar, ...).\n2) `set`:\n     Sets are lists that must not have multiple items with the same value. Each\n     value must be a scalar, an object with x-kubernetes-map-type `atomic` or an\n     array with x-kubernetes-list-type `atomic`.\n3) `map`:\n     These lists are like maps in that their elements have a non-index key\n     used to identify them. Order is preserved upon merge. The map tag\n     must only be used on a list with elements of type object.\nDefaults to atomic for arrays.",
          "type": "string"
        },
        "x-kubernetes-map-type": {
          "description": "x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:\n\n1) `granular`:\n     These maps are actual maps (key-value pairs) and each fields are independent\n     from each other (they can each be manipulated by separate actors). This is\n     the default behaviour for all maps.\n2) `atomic`: the list is treated as a single entity, like a scalar.\n     Atomic maps will be entirely replaced when updated.",
          "type": "string"
        },
        "x-kubernetes-preserve-unknown-fields": {
          "description": "x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.",
          "type": "boolean"
        },
        "x-kubernetes-validations": {
          "description": "x-kubernetes-validations describes a list of validation rules written in the CEL expression language. This field is an alpha-level. Using this field requires the feature gate `CustomResourceValidationExpressions` to be enabled.",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "rule"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "rule",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray": {
      "description": "JSONSchemaPropsOrArray represents a value that can either be a JSONSchemaProps or an array of JSONSchemaProps. Mainly here for serialization purposes."
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool": {
      "description": "JSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value. Defaults to true for the boolean property."
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray": {
      "description": "JSONSchemaPropsOrStringArray represents a JSONSchemaProps or a string array."
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule": {
      "additionalProperties": false,
      "description": "ValidationRule describes a validation rule written in the CEL expression language.",
      "properties": {
        "message": {
          "description": "Message represents the message displayed when validation fails. The message is required if the Rule contains line breaks. The message must not contain line breaks. If unset, the message is \"failed rule: {Rule}\". e.g. \"must be a URL with the host matching spec.host\"",
          "type": "string"
        },
        "rule": {
          "description": "Rule represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec The Rule is scoped to the location of the x-kubernetes-validations extension in the schema. The `self` variable in the CEL expression is bound to the scoped value. Example: - Rule scoped to the root of a resource with a status subresource: {\"rule\": \"self.status.actual \u003c= self.spec.maxDesired\"}\n\nIf the Rule is scoped to an object with properties, the accessible properties of the object are field selectable via `self.field` and field presence can be checked via `has(self.field)`. Null valued fields are treated as absent fields in CEL expressions. If the Rule is scoped to an object with additionalProperties (i.e. a map) the value of the map are accessible via `self[mapKey]`, map containment can be checked via `mapKey in self` and all entries of the map are accessible via CEL macros and functions such as `self.all(...)`. If the Rule is scoped to an array, the elements of the array are accessible via `self[i]` and also by macros and functions. If the Rule is scoped to a scalar, `self` is bound to the scalar value. Examples: - Rule scoped to a map of objects: {\"rule\": \"self.components['Widget'].priority \u003c 10\"} - Rule scoped to a list of integers: {\"rule\": \"self.values.all(value, value \u003e= 0 \u0026\u0026 value \u003c 100)\"} - Rule scoped to a string value: {\"rule\": \"self.startsWith('kube')\"}\n\nThe `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object and from any x-kubernetes-embedded-resource annotated objects. No other metadata properties are accessible.\n\nUnknown data preserved in custom resources via x-kubernetes-preserve-unknown-fields is not accessible in CEL expressions. This includes: - Unknown field values that are preserved by object schemas with x-kubernetes-preserve-unknown-fields. - Object properties where the property schema is of an \"unknown type\". An \"unknown type\" is recursively defined as:\n  - A schema with no type and x-kubernetes-preserve-unknown-fields set to true\n  - An array where the items schema is of an \"unknown type\"\n  - An object where the additionalProperties schema is of an \"unknown type\"\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Rule accessing a property named \"namespace\": {\"rule\": \"self.__namespace__ \u003e 0\"}\n  - Rule accessing a property named \"x-prop\": {\"rule\": \"self.x__dash__prop \u003e 0\"}\n  - Rule accessing a property named \"redact__d\": {\"rule\": \"self.redact__underscores__d \u003e 0\"}\n\nEquality on arrays with x-kubernetes-list-type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and\n    non-intersecting elements in `Y` are appended, retaining their partial order.\n  - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values\n    are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with\n    non-intersecting keys are appended, retaining their partial order.",
          "type": "string"
        }
      },
      "required": [
        "rule"
      ],
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
      "additionalProperties": false,
      "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
      "properties": {
        "matchExpressions": {
          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement",
            "default": {}
          },
          "type": "array"
        },
        "matchLabels": {
          "additionalProperties": {
            "default": "",
            "type": "string"
          },
          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
          "type": "object"
        }
      },
      "type": "object",
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
      "additionalProperties": false,
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "properties": {
        "key": {
          "default": "",
          "description": "key is the label key that the selector applies to.",
          "type": "string",
          "x-kubernetes-patch-merge-key": "key",
          "x-kubernetes-patch-strategy": "merge"
        },
        "operator": {
          "default": "",
          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
          "type": "string"
        },
        "values": {
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "key",
        "operator"
      ],
      "type": "object"
    },
    "metachart.api.meta.v1.ObjectMeta": {
      "additionalProperties": false,
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "default": "",
            "type": "string"
          },
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object"
        },
        "checksums": {
          "$ref": "#/definitions/metachart.interface.checksums"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array",
          "x-kubernetes-patch-strategy": "merge"
        },
        "labels": {
          "additionalProperties": {
            "default": "",
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      },
      "type": "object"
    },
    "metachart.api.sh.gatekeeper.apis.config.v1alpha1.Config": {
      "additionalProperties": false,
      "description": "Config is the Schema for the configs API.",
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/sh.gatekeeper.apis.config.v1alpha1.ConfigSpec",
          "default": {}
        }
      },
      "type": "object"
    },
    "metachart.api.sh.gatekeeper.apis.expansion.v1alpha1.ExpansionTemplate": {
      "additionalProperties": false,
      "description": "ExpansionTemplate is the Schema for the ExpansionTemplate API.",
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/sh.gatekeeper.apis.expansion.v1alpha1.ExpansionTemplateSpec",
          "default": {}
        }
      },
      "type": "object"
    },
    "metachart.api.sh.gatekeeper.apis.mutations.v1.Assign": {
      "additionalProperties": false,
      "description": "Assign is the Schema for the assign API.",
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.AssignSpec",
          "default": {}
        }
      },
      "type": "object"
    },
    "metachart.api.sh.gatekeeper.apis.mutations.v1.AssignMetadata": {
      "additionalProperties": false,
      "description": "AssignMetadata is the Schema for the assignmetadata API.",
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.AssignMetadataSpec",
          "default": {}
        }
      },
      "type": "object"
    },
    "metachart.api.sh.gatekeeper.apis.mutations.v1.ModifySet": {
      "additionalProperties": false,
      "description": "ModifySet allows the user to modify non-keyed lists, such as the list of arguments to a container.",
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.ModifySetSpec",
          "default": {}
        }
      },
      "type": "object"
    },
    "metachart.api.sh.gatekeeper.apis.status.v1beta1.ConstraintPodStatus": {
      "additionalProperties": false,
      "description": "ConstraintPodStatus is the Schema for the constraintpodstatuses API.",
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        }
      },
      "type": "object"
    },
    "metachart.api.sh.gatekeeper.frameworks.constraint.pkg.apis.externaldata.v1alpha1.Provider": {
      "additionalProperties": false,
      "description": "Provider is the Schema for the Provider API",
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/sh.gatekeeper.frameworks.constraint.pkg.apis.externaldata.v1alpha1.ProviderSpec",
          "default": {},
          "description": "Spec defines the Provider specifications."
        }
      },
      "type": "object"
    },
    "metachart.api.sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.ConstraintTemplate": {
      "additionalProperties": false,
      "description": "ConstraintTemplate is the Schema for the constrainttemplates API",
      "properties": {
        "enabled": {
          "$ref": "#/definitions/metachart.interface.boolean"
        },
        "metadata": {
          "$ref": "#/definitions/metachart.api.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.ConstraintTemplateSpec",
          "default": {}
        }
      },
      "type": "object"
    },
    "metachart.interface.FQDNitem": {
      "pattern": "^[a-z][0-9a-z]*(-[0-9a-z]+)*$",
      "type": "string"
    },
    "metachart.interface.boolean": {
      "type": "boolean"
    },
    "metachart.interface.checksumEntryList": {
      "anyOf": [
        {
          "items": {
            "$ref": "#/definitions/metachart.interface.FQDNitem"
          },
          "type": "array"
        },
        {
          "enum": [
            "*"
          ]
        }
      ]
    },
    "metachart.interface.checksums": {
      "properties": {
        "assign": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "assignmetadata": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "configs": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "constraintpodstatuses": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "constrainttemplatepodstatuses": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "constrainttemplates": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "expansiontemplate": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "modifyset": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "mutatorpodstatuses": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        },
        "providers": {
          "$ref": "#/definitions/metachart.interface.checksumEntryList"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.config.v1alpha1.ConfigSpec": {
      "additionalProperties": false,
      "description": "ConfigSpec defines the desired state of Config.",
      "properties": {
        "match": {
          "description": "Configuration for namespace exclusion",
          "items": {
            "$ref": "#/definitions/sh.gatekeeper.apis.config.v1alpha1.MatchEntry",
            "default": {}
          },
          "type": "array"
        },
        "readiness": {
          "$ref": "#/definitions/sh.gatekeeper.apis.config.v1alpha1.ReadinessSpec",
          "default": {},
          "description": "Configuration for readiness tracker"
        },
        "sync": {
          "$ref": "#/definitions/sh.gatekeeper.apis.config.v1alpha1.Sync",
          "default": {},
          "description": "Configuration for syncing k8s objects"
        },
        "validation": {
          "$ref": "#/definitions/sh.gatekeeper.apis.config.v1alpha1.Validation",
          "default": {},
          "description": "Configuration for validation"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.config.v1alpha1.GVK": {
      "additionalProperties": false,
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.config.v1alpha1.MatchEntry": {
      "additionalProperties": false,
      "properties": {
        "excludedNamespaces": {
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        },
        "processes": {
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.config.v1alpha1.ReadinessSpec": {
      "additionalProperties": false,
      "properties": {
        "statsEnabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.config.v1alpha1.Sync": {
      "additionalProperties": false,
      "properties": {
        "syncOnly": {
          "description": "If non-empty, only entries on this list will be replicated into OPA",
          "items": {
            "$ref": "#/definitions/sh.gatekeeper.apis.config.v1alpha1.SyncOnlyEntry",
            "default": {}
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.config.v1alpha1.SyncOnlyEntry": {
      "additionalProperties": false,
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.config.v1alpha1.Trace": {
      "additionalProperties": false,
      "properties": {
        "dump": {
          "description": "Also dump the state of OPA with the trace. Set to `All` to dump everything.",
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/sh.gatekeeper.apis.config.v1alpha1.GVK",
          "default": {},
          "description": "Only trace requests of the following GroupVersionKind"
        },
        "user": {
          "description": "Only trace requests from the specified user",
          "type": "string"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.config.v1alpha1.Validation": {
      "additionalProperties": false,
      "properties": {
        "traces": {
          "description": "List of requests to trace. Both \"user\" and \"kinds\" must be specified",
          "items": {
            "$ref": "#/definitions/sh.gatekeeper.apis.config.v1alpha1.Trace",
            "default": {}
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.expansion.v1alpha1.ExpansionTemplateSpec": {
      "additionalProperties": false,
      "description": "ExpansionTemplateSpec defines the desired state of ExpansionTemplate.",
      "properties": {
        "applyTo": {
          "description": "ApplyTo lists the specific groups, versions and kinds of generator resources which will be expanded.",
          "items": {
            "$ref": "#/definitions/sh.gatekeeper.pkg.mutation.match.ApplyTo",
            "default": {}
          },
          "type": "array"
        },
        "enforcementAction": {
          "description": "EnforcementAction specifies the enforcement action to be used for resources matching the ExpansionTemplate. Specifying an empty value will use the enforcement action specified by the Constraint in violation.",
          "type": "string"
        },
        "generatedGVK": {
          "$ref": "#/definitions/sh.gatekeeper.apis.expansion.v1alpha1.GeneratedGVK",
          "default": {},
          "description": "GeneratedGVK specifies the GVK of the resources which the generator resource creates."
        },
        "templateSource": {
          "description": "TemplateSource specifies the source field on the generator resource to use as the base for expanded resource. For Pod-creating generators, this is usually spec.template",
          "type": "string"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.expansion.v1alpha1.GeneratedGVK": {
      "additionalProperties": false,
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.mutations.v1.AssignField": {
      "additionalProperties": false,
      "properties": {
        "externalData": {
          "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.ExternalData",
          "description": "ExternalData describes the external data provider to be used for mutation."
        },
        "fromMetadata": {
          "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.FromMetadata",
          "description": "FromMetadata assigns a value from the specified metadata field."
        },
        "value": {
          "$ref": "#/definitions/sh.gatekeeper.pkg.mutation.types.Anything",
          "description": "Value is a constant value that will be assigned to `location`"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.mutations.v1.AssignMetadataSpec": {
      "additionalProperties": false,
      "description": "AssignMetadataSpec defines the desired state of AssignMetadata.",
      "properties": {
        "location": {
          "type": "string"
        },
        "match": {
          "$ref": "#/definitions/sh.gatekeeper.pkg.mutation.match.Match",
          "default": {}
        },
        "parameters": {
          "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.MetadataParameters",
          "default": {}
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.mutations.v1.AssignSpec": {
      "additionalProperties": false,
      "description": "AssignSpec defines the desired state of Assign.",
      "properties": {
        "applyTo": {
          "description": "ApplyTo lists the specific groups, versions and kinds a mutation will be applied to. This is necessary because every mutation implies part of an object schema and object schemas are associated with specific GVKs.",
          "items": {
            "$ref": "#/definitions/sh.gatekeeper.pkg.mutation.match.ApplyTo",
            "default": {}
          },
          "type": "array"
        },
        "location": {
          "description": "Location describes the path to be mutated, for example: `spec.containers[name: main]`.",
          "type": "string"
        },
        "match": {
          "$ref": "#/definitions/sh.gatekeeper.pkg.mutation.match.Match",
          "default": {},
          "description": "Match allows the user to limit which resources get mutated. Individual match criteria are AND-ed together. An undefined match criteria matches everything."
        },
        "parameters": {
          "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.Parameters",
          "default": {},
          "description": "Parameters define the behavior of the mutator."
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.mutations.v1.ExternalData": {
      "additionalProperties": false,
      "description": "ExternalData describes the external data source to use for the mutation.",
      "properties": {
        "dataSource": {
          "description": "DataSource specifies where to extract the data that will be sent to the external data provider as parameters.",
          "type": "string"
        },
        "default": {
          "description": "Default specifies the default value to use when the external data provider returns an error and the failure policy is set to \"UseDefault\".",
          "type": "string"
        },
        "failurePolicy": {
          "description": "FailurePolicy specifies the policy to apply when the external data provider returns an error.",
          "type": "string"
        },
        "provider": {
          "description": "Provider is the name of the external data provider.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.mutations.v1.FromMetadata": {
      "additionalProperties": false,
      "properties": {
        "field": {
          "description": "Field specifies which metadata field provides the assigned value. Valid fields are `namespace` and `name`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.mutations.v1.MetadataParameters": {
      "additionalProperties": false,
      "properties": {
        "assign": {
          "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.AssignField",
          "default": {},
          "description": "Assign.value holds the value to be assigned"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.mutations.v1.ModifySetParameters": {
      "additionalProperties": false,
      "properties": {
        "operation": {
          "description": "Operation describes whether values should be merged in (\"merge\"), or pruned (\"prune\"). Default value is \"merge\"",
          "type": "string"
        },
        "pathTests": {
          "description": "PathTests are a series of existence tests that can be checked before a mutation is applied",
          "items": {
            "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.PathTest",
            "default": {}
          },
          "type": "array"
        },
        "values": {
          "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.Values",
          "default": {},
          "description": "Values describes the values provided to the operation as `values.fromList`."
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.mutations.v1.ModifySetSpec": {
      "additionalProperties": false,
      "description": "ModifySetSpec defines the desired state of ModifySet.",
      "properties": {
        "applyTo": {
          "description": "ApplyTo lists the specific groups, versions and kinds a mutation will be applied to. This is necessary because every mutation implies part of an object schema and object schemas are associated with specific GVKs.",
          "items": {
            "$ref": "#/definitions/sh.gatekeeper.pkg.mutation.match.ApplyTo",
            "default": {}
          },
          "type": "array"
        },
        "location": {
          "description": "Location describes the path to be mutated, for example: `spec.containers[name: main].args`.",
          "type": "string"
        },
        "match": {
          "$ref": "#/definitions/sh.gatekeeper.pkg.mutation.match.Match",
          "default": {},
          "description": "Match allows the user to limit which resources get mutated. Individual match criteria are AND-ed together. An undefined match criteria matches everything."
        },
        "parameters": {
          "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.ModifySetParameters",
          "default": {},
          "description": "Parameters define the behavior of the mutator."
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.mutations.v1.Parameters": {
      "additionalProperties": false,
      "properties": {
        "assign": {
          "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.AssignField",
          "default": {},
          "description": "Assign.value holds the value to be assigned"
        },
        "pathTests": {
          "items": {
            "$ref": "#/definitions/sh.gatekeeper.apis.mutations.v1.PathTest",
            "default": {}
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.mutations.v1.PathTest": {
      "additionalProperties": false,
      "description": "PathTest allows the user to customize how the mutation works if parent paths are missing. It traverses the list in order. All sub paths are tested against the provided condition, if the test fails, the mutation is not applied. All `subPath` entries must be a prefix of `location`. Any glob characters will take on the same value as was used to expand the matching glob in `location`.\n\nAvailable Tests: * MustExist    - the path must exist or do not mutate * MustNotExist - the path must not exist or do not mutate.",
      "properties": {
        "condition": {
          "type": "string"
        },
        "subPath": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.apis.mutations.v1.Values": {
      "additionalProperties": false,
      "description": "Values describes the values provided to the operation.",
      "properties": {
        "fromList": {
          "items": {
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.frameworks.constraint.pkg.apis.externaldata.v1alpha1.ProviderSpec": {
      "additionalProperties": false,
      "description": "ProviderSpec defines the desired state of Provider.",
      "properties": {
        "caBundle": {
          "description": "CABundle is a base64-encoded string that contains the TLS CA bundle in PEM format. It is used to verify the signature of the provider's certificate.",
          "type": "string"
        },
        "insecureTLSSkipVerify": {
          "description": "InsecureTLSSkipVerify skips the verification of Provider's certificate if enabled.",
          "type": "boolean"
        },
        "timeout": {
          "description": "Timeout is the timeout when querying the provider.",
          "format": "int32",
          "type": "integer"
        },
        "url": {
          "description": "URL is the url for the provider. URL is prefixed with http:// or https://.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.CRD": {
      "additionalProperties": false,
      "properties": {
        "spec": {
          "$ref": "#/definitions/sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.CRDSpec",
          "default": {}
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.CRDSpec": {
      "additionalProperties": false,
      "properties": {
        "names": {
          "$ref": "#/definitions/sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.Names",
          "default": {}
        },
        "validation": {
          "$ref": "#/definitions/sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.Validation"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.ConstraintTemplateSpec": {
      "additionalProperties": false,
      "description": "ConstraintTemplateSpec defines the desired state of ConstraintTemplate.",
      "properties": {
        "crd": {
          "$ref": "#/definitions/sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.CRD",
          "default": {}
        },
        "targets": {
          "items": {
            "$ref": "#/definitions/sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.Target",
            "default": {}
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.Names": {
      "additionalProperties": false,
      "properties": {
        "kind": {
          "type": "string"
        },
        "shortNames": {
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.Target": {
      "additionalProperties": false,
      "properties": {
        "libs": {
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        },
        "rego": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.Validation": {
      "additionalProperties": false,
      "properties": {
        "legacySchema": {
          "type": "boolean"
        },
        "openAPIV3Schema": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.pkg.mutation.match.ApplyTo": {
      "additionalProperties": false,
      "description": "ApplyTo determines what GVKs items the mutation should apply to. Globs are not allowed.",
      "properties": {
        "groups": {
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        },
        "kinds": {
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        },
        "versions": {
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.pkg.mutation.match.Kinds": {
      "additionalProperties": false,
      "description": "Kinds accepts a list of objects with apiGroups and kinds fields that list the groups/kinds of objects to which the mutation will apply. If multiple groups/kinds objects are specified, only one match is needed for the resource to be in scope.",
      "properties": {
        "apiGroups": {
          "description": "APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.",
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        },
        "kinds": {
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.pkg.mutation.match.Match": {
      "additionalProperties": false,
      "description": "Match selects objects to apply mutations to.",
      "properties": {
        "excludedNamespaces": {
          "description": "ExcludedNamespaces is a list of namespace names. If defined, a constraint only applies to resources not in a listed namespace. ExcludedNamespaces also supports a prefix or suffix based glob.  For example, `excludedNamespaces: [kube-*]` matches both `kube-system` and `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and `gatekeeper-system`.",
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        },
        "kinds": {
          "items": {
            "$ref": "#/definitions/sh.gatekeeper.pkg.mutation.match.Kinds",
            "default": {}
          },
          "type": "array"
        },
        "labelSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "LabelSelector is the combination of two optional fields: `matchLabels` and `matchExpressions`.  These two fields provide different methods of selecting or excluding k8s objects based on the label keys and values included in object metadata.  All selection expressions from both sections are ANDed to determine if an object meets the cumulative requirements of the selector."
        },
        "name": {
          "description": "Name is the name of an object.  If defined, it will match against objects with the specified name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.",
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
          "description": "NamespaceSelector is a label selector against an object's containing namespace or the object itself, if the object is a namespace."
        },
        "namespaces": {
          "description": "Namespaces is a list of namespace names. If defined, a constraint only applies to resources in a listed namespace.  Namespaces also supports a prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both `kube-system` and `gatekeeper-system`.",
          "items": {
            "default": "",
            "type": "string"
          },
          "type": "array"
        },
        "scope": {
          "description": "Scope determines if cluster-scoped and/or namespaced-scoped resources are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)",
          "type": "string"
        },
        "source": {
          "description": "Source determines whether generated or original resources are matched. Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of `Generated` will only match generated resources, while `Original` will only match regular resources.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "sh.gatekeeper.pkg.mutation.types.Anything": {
      "description": "Anything is a struct wrapper around a field of type `interface{}` that plays nicely with controller-gen",
      "type": "object"
    }
  },
  "properties": {
    "assign": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.mutations.v1.Assign"
        }
      },
      "type": "object"
    },
    "assignmetadata": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.mutations.v1.AssignMetadata"
        }
      },
      "type": "object"
    },
    "configs": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.config.v1alpha1.Config"
        }
      },
      "type": "object"
    },
    "constraintpodstatuses": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.status.v1beta1.ConstraintPodStatus"
        }
      },
      "type": "object"
    },
    "constrainttemplatepodstatuses": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/"
        }
      },
      "type": "object"
    },
    "constrainttemplates": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.ConstraintTemplate"
        }
      },
      "type": "object"
    },
    "context": {
      "description": "Any content which can be used for config rendering without schema defined by the chart",
      "type": "object"
    },
    "expansiontemplate": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.expansion.v1alpha1.ExpansionTemplate"
        }
      },
      "type": "object"
    },
    "fullnameOverride": {
      "anyOf": [
        {
          "$ref": "#/definitions/metachart.interface.FQDNitem"
        },
        {
          "type": "null"
        }
      ]
    },
    "modifyset": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.mutations.v1.ModifySet"
        }
      },
      "type": "object"
    },
    "mutatorpodstatuses": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/"
        }
      },
      "type": "object"
    },
    "providers": {
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][0-9a-z]*(-[0-9a-z]+)*$": {
          "$ref": "#/definitions/metachart.api.sh.gatekeeper.frameworks.constraint.pkg.apis.externaldata.v1alpha1.Provider"
        }
      },
      "type": "object"
    },
    "settings": {
      "additionalProperties": false,
      "properties": {
        "assign": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.mutations.v1.Assign"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "assignmetadata": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.mutations.v1.AssignMetadata"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "configs": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.config.v1alpha1.Config"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "constraintpodstatuses": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.status.v1beta1.ConstraintPodStatus"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "constrainttemplatepodstatuses": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "constrainttemplates": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.sh.gatekeeper.frameworks.constraint.pkg.apis.templates.v1.ConstraintTemplate"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "expansiontemplate": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.expansion.v1alpha1.ExpansionTemplate"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "global": {
          "additionalProperties": false,
          "properties": {
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "modifyset": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.sh.gatekeeper.apis.mutations.v1.ModifySet"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "mutatorpodstatuses": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "providers": {
          "properties": {
            "defaults": {
              "$ref": "#/definitions/metachart.api.sh.gatekeeper.frameworks.constraint.pkg.apis.externaldata.v1alpha1.Provider"
            },
            "disabled": {
              "description": "Disable all resources of this kind",
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    }
  }
}